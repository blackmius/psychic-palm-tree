import java.util.ArrayList;

public class Primes {
    // –í—ã–≥–ª—è–¥–∏—Ç —É–∂–∞—Å–Ω–æ
    // —á—Ç–æ–± –æ–±—ä—è–≤–∏—Ç—å —Ç–∏–ø —Å–ø–∏—Å–∫–∞, –µ–º—É –Ω—É–∂–µ–Ω —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∞ –Ω–µ —Å–∞–º —Ç–∏–ø
    // –ø–æ—á–µ–º—É —Ç–æ–≥–¥–∞ —Å—Ä–∞–∑—É —Ç–∏–ø—ã –Ω–µ —Å–¥–µ–ª–∞—Ç—å –æ–±—ä–µ–∫—Ç–∞–º–∏?
    // –≤–æ—Ç int - —ç—Ç–æ –¥–∞–Ω–Ω—ã–µ, –∞ Integer —ç—Ç–æ —É–∂–µ –æ–±—ä–µ–∫—Ç ü§Æ
    public static ArrayList<Integer> primes = new ArrayList<Integer>();

    public static void main(String[] args) {
        for (int i = 2; i < 100; i++) {
            if (isPrime(i)) {
                System.out.println(i);
                primes.add(i);
            }
        }
    }
    
    public static boolean isPrime(int n) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É
        // –ü–æ—Å–∫–æ–ª—å–∫—É —É –Ω–∞—Å –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ—Å—Ç—ã—Ö —á–∏—Å–µ–ª –¥–æ n
        // —Ç–æ –ø–æ –æ—Å–Ω–æ–≤–Ω–∞—è —Ç–µ–æ—Ä–µ–º–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏—Ö
        for (int prime : primes) {
            // –ø—Ä–∏—á–µ–º –µ—Å–ª–∏ –∫–≤–∞–¥—Ä–∞—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ —á–∏—Å–ª–∞ –±–æ–ª—å—à–µ n
            // —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ n –Ω–µ –¥–µ–ª–∏—Ç—Å—è –Ω–∏ –Ω–∞ –∫–∞–∫–æ–µ —á–∏—Å–ª–æ <= prime
            // –∏ –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ —Å–ª–µ–¥—É—é—â–∏–º –ø–æ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–æ—Å—Ç—ã–º —á–∏—Å–ª–æ–º
            if (prime*prime > n)
                break;
            else if (n % prime == 0)
                return false;
        }   
        return true;
    } 
} 
